name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.6.2
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      id: pnpm-cache
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install Dependencies
      run: |
        cd client
        pnpm install --frozen-lockfile
        
    - name: Run ESLint
      run: |
        cd client
        pnpm run lint
        
    - name: Run TypeScript Check
      run: |
        cd client
        pnpm exec tsc --noEmit
        
    - name: Run Tests
      run: |
        cd client
        pnpm test
        
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.6.2
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      id: pnpm-cache
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install Dependencies
      run: |
        cd client
        pnpm install --frozen-lockfile
        
    - name: Build
      run: |
        cd client
        pnpm run build
      env:
        CI: true
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: client/.next
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build
        path: client/.next
        
    # Add deployment step here based on your hosting provider
    # Example for Vercel:
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v20
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
    #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
